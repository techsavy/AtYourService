@model AtYourService.Domain.Adverts.Service
@{
    ViewBag.Title = Model.Title;
    var category = Model.Category;
    var location = Model.Location;
}
<div class="row">
    <div class="span12">
        <h2>@Model.Title</h2>
    </div>
</div>
<div class="row">
    <div class="span6">
        <div class="well well-large">
            <div class="detail-body">@Html.Markdown(Model.Body)</div>
        </div>
        <div class="row">
            <div class="span3">
                @if (Model.Image != null)
                {
                    <img src="@Url.Action("GetMedium", "Images", new { id = Model.Image.Id })" alt="Image"/>
                }
            </div>
            <div class="span3">
                <span class="span1">Category</span><strong> @Html.ActionLink(category.Name, "Category", "Services", new { id = category.Id, name = category.Name }, null)</strong>
                <div>
                    <span class="span1">Posted </span><strong>@Html.FuzzyDate(Model.EffectiveDate)</strong></div>
                <div>
                    <span class="span1">By </span><strong>@Model.Client.Name</strong>
                </div>
                <div>
                    <span class="span1">Views </span><strong>@Model.Views</strong>
                </div>
                @if (Model.ReviewCount > 0)
                {
                    var score = Model.TotalReviewScore / (float)Model.ReviewCount;
                    <div>
                        <span class="span1">Rating </span>
                        <div class="rateit" data-rateit-value="@score" data-rateit-ispreset="true" data-rateit-readonly="true">
                        </div>
                    </div>
                }
            </div>
            <div>
                <a class="btn btn-small" href="#" id="btn-flag"><i class="icon-flag"></i>Flag this service</a>
            </div>
        </div>
        <div class="row">
            <div id="review-section">
            </div>
        </div>
    </div>
    <div class="span6">
        <div id="map-canvas" style="height: 400px">
        </div>
    </div>
</div>
<div class="modal hide fade" id="modal-flag">
    <div class="modal-header">
        <button class="close" data-dismiss="modal">
            &times;</button>
        <h3>
            Flag this service</h3>
    </div>
    <div class="modal-body">
        @using (Html.BeginForm("Create", "Flags", FormMethod.Post, new { @class = "form-horizontal", id = "flag-form" }))
        {
            <div class="control-group">
                <label class="control-label" for="Category">
                    Category</label>
                <div class="controls">
                    <select id="Category" name="Category">
                        <option value="1">Spam</option>
                        <option value="2">Violate Terms</option>
                        <option value="3">Claim Ownership</option>
                        <option value="4">Other</option>
                    </select>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="Reason">
                    Reason<span class="required-star">*</span></label>
                <div class="controls">
                    <textarea class="input-xlarge" data-val="true" data-val-length="The field Name must be a string with a minimum length of 10 and a maximum length of 500."
                        data-val-length-max="500" data-val-length-min="10" data-val-required="The Reason is required."
                        id="Reason" name="Reason" rows="3" cols="5">
</textarea>
                    <span class="field-validation-valid" data-valmsg-for="Reason" data-valmsg-replace="true">                        
                    </span>
                    <input type="hidden" name="ServiceId" id="ServiceId" value="@Model.Id"/>
                </div>
            </div>
        }
    </div>
    <div class="modal-footer">
        <a href="#" data-dismiss="modal" class="btn">Close</a> <a href="#" id="btn-modal-flag"
            class="btn btn-primary">Flag</a>
    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery.timeago.js")" type="text/javascript"></script>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript">
    $(function () {        
        $("abbr.timeago").timeago();
        initialize();
        getReviews();
        initFlagging();
    });

    var map;
    function initialize() {
        var latlng = new google.maps.LatLng(@location.Y, @location.X);
        var options = { zoom: 14, center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("map-canvas"), options);
        
        var marker = new google.maps.Marker({
            position: latlng,
            animation: google.maps.Animation.DROP,
            map: map,
            title: '@Model.Title'
        });            
    }

    function getReviews() {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Reviews", "Reviews")',
            data: { serviceId: @Model.Id },
            dataType: 'html',
            success: function (data) {
                $('#review-section').append(data);

                $.validator.unobtrusive.parse('#create-review-form');
                $('div.rateit').rateit();
                $('.timeago').timeago();

                $('form#create-review-form').submit(function() {
                    var isValid = $('#create-review-form').valid();
                    if (isValid) {
                        var score = $('#Score').val();
                        if (!(!isNaN(parseFloat(score)) && isFinite(score))) {
                            var span = $('#curr-error');
                            span.html('Please rate the service.');
                            span.addClass("field-validation-error");
                            
                            return false;
                        } else {
                            return true;
                        }
                    }
                    
                    return isValid;
                });
            }
        }); 
    }

    function initFlagging() {
        
        $('#btn-flag').click(function () {
            $('#modal-flag').modal('show');

            return false;
        });
        
        $('#btn-modal-flag').on('click', function (e) {
            e.preventDefault();

        if ($('#flag-form').valid()) {
                $.ajax({
                type: "POST",
                url: "@Url.Action("Create", "Flags")",
                data: $('#flag-form').serialize(),
                dataType: "json",
                success: function (data) {
                    if (data.Success) {
                        $('#modal-flag').modal('hide');
                        $('#btn-flag').hide();
                        $('#modal-message-body').html('Thank you for flagging this service. We will look into it.');
                        $('#modal-message').modal('show');                        
                    } else {
                        $('#modal-flag').modal('hide');
                        $('#modal-message-body').html('Something went wrong. We will look into it.');
                        $('#modal-message').modal('show'); 
                    }
                }
            });
        }            
        });
    }
</script>
