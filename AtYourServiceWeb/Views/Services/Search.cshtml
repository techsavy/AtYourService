@using AtYourService.Domain.Adverts
@model SearchModel
@{
    ViewBag.Title = "Search";
    var services = (IEnumerable<Service>)ViewData[ViewDataKeys.Services];
    var location = (Point)ViewData[ViewDataKeys.UserLocation];
}
<div class="row">
    <div class="span12">
        @using (Html.BeginForm("Search", "Services", FormMethod.Get, new { @class = "form-horizontal" }))
        {
            <fieldset>
                <legend>Search</legend>
                <div class="row">
                    <div class="control-group search-field">
                        @Html.Custom().LabelFor(model => model.Terms)
                        <div class="controls">
                            @Html.TextBoxFor(model => model.Terms, new { @class = "input-large" })</div>
                    </div>
                    <div class="control-group search-field">
                        @Html.Custom().LabelFor(model => model.Location)
                        <div class="controls">
                            @Html.TextBoxFor(model => model.Location, new { @class = "input-large" })
                        </div>
                    </div>
                    <div class="control-group search-field">
                        @Html.Custom().LabelFor(model => model.CategoryId)
                        <div class="controls">
                            @Html.CategoryFilterFor(model => model.CategoryId, (IEnumerable<GroupedSelectListItem>)ViewData[ViewDataKeys.Categories], "All")
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="control-group search-field">
                        @Html.Custom().LabelFor(model => model.Type)
                        <div class="controls">
                            @Html.DropDownListFor(model => model.Type, (IEnumerable<SelectListItem>)ViewData[ViewDataKeys.ServiceTypes], "All")
                        </div>
                    </div>
                    <div class="control-group search-field">
                        @Html.Custom().LabelFor(model => model.SortBy)
                        <div class="controls">
                            @Html.DropDownListFor(model => model.SortBy, (IEnumerable<SelectListItem>)ViewData[ViewDataKeys.SortTypes])
                        </div>
                    </div>
                    <div class="control-group search-field">
                        <div class="control-label"></div>
                        <div class="controls">
                            <button class="btn btn-primary" type="submit">
                            Search</button>
                        </div>                        
                    </div>
                </div>
            </fieldset>     
        }
    </div>
</div>
<div class="row">
    <div class="span6">
        <table class="table table-bordered table-striped">
            <thead class="hide">
                <tr>
                    <th>
                        Views
                    </th>
                    <th>
                        Image
                    </th>
                    <th>
                        Text
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (services != null)
                {
                    foreach (var service in services)
                    {
                        <tr data-id="@service.Id">
                            <td>
                                <div class="center">
                                    <h2>
                                        @service.ReviewCount</h2>
                                    Reviews</div>
                                <div class="center">
                                    <h3>
                                        @service.Views</h3>
                                    Views
                                </div>
                            </td>
                            <td>
                                @if (service.Image != null)
                                {
                                    <img src="@Url.Action("GetSmall", "Images", new {id = service.Image.Id})" alt="Image"/>
                                }
                                else
                                {
                                    <img alt="Image" src="@Url.Content("~/Content/Images/NoPreview.png")" />
                                }
                            </td>
                            <td>
                                <h3>
                                    @Html.ServiceDetailsActionLink(service)</h3>
                                <p>
                                    @service.Body</p>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="3">No results found.</td></tr>
  
                }
            </tbody>
        </table>
    </div>
    <div class="span6" id="map-canvas" style="height: 600px">
    </div>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript">
    var services = @Html.Serialize(ViewData[ViewDataKeys.ServiceSerializationInfos]);

    function initialize() {
        var latlng = new google.maps.LatLng(@location.Y, @location.X);
        var options = { zoom: 14, center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById
            ("map-canvas"), options);

        setUserMarker(map, latlng);
        
        $.each(services, function(index, value) { 
            var serviceLatlng = new google.maps.LatLng(value.Lat, value.Lng);
            
            var marker = new google.maps.Marker({
                position: serviceLatlng,
                animation: google.maps.Animation.DROP,
                map: map,
                title: value.Title
            });
            marker.set("id", value.Id);
            
            attachInfo(marker, value);
        });
    }

    function attachInfo(marker, service) {

        var infowindow = new google.maps.InfoWindow({
            content: formatInfoContent(service)
        });

        google.maps.event.addListener(marker, 'click', function() {
            infowindow.open(marker.get('map'), marker);
        });
    }
      
    $(function () {
        $('.dropdown-toggle').dropdown();
        initialize();

        $('tbody > tr').hover(function() {
            var id = $(this).attr('data-id');

            $.each(services, function(index, value) { 
                if (value.Id == id) {
                    map.setCenter(new google.maps.LatLng(value.Lat, value.Lng));
                }
            
            });
        });
    });
</script>
</div>
