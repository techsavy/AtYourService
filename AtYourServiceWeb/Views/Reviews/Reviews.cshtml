@using AtYourService.Domain.Moderation
@model ReviewsModel
@{
    var reviews = (IEnumerable<Review>)ViewData[ViewDataKeys.Reviews];
}
<div id="reviews">
    @if (reviews.Any())
    {
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>
                        Reviews
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var review in reviews)
                {
                    <tr>
                        <td><div>@review.Body</div>
                        <div class="span6"><div style="color:slategray; padding: 7px 0px;">
                            Rated <div class="rateit" data-rateit-value="@review.Score" data-rateit-ispreset="true" data-rateit-readonly="true"></div> by
                            @review.Client.Name On @Html.FuzzyDate(review.LastModifiedDate)</div></div>
                        </td>
                    </tr>  
                }
            </tbody>
        </table>
    }
    else
    {
        <i>There are no reviews.</i>
    }
</div>
@if (Model.AllowCreate)
{
    <div id="create-review">
        @using (Html.BeginForm("Create", "Reviews", FormMethod.Post, new { @class = "form-horizontal", id = "create-review-from" }))
        {
            @Html.Partial("_Create", new CreateReviewModel { ServiceId = Model.ServiceId })
        }
    </div>
}
else if (!Request.IsAuthenticated)
{
    <p>@Html.ActionLink("Sign In", "Login", "Accounts") to review this service.</p>
}
